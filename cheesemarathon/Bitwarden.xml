<?xml version="1.0" encoding="utf-8"?>
<Container version="2">
    <Beta>False</Beta>
    <Category>Tools:</Category>
    <Name>Bitwarden</Name>
    <DonateText>Buy Me a Coffee</DonateText>
    <DonateLink>https://ko-fi.com/I2I0CW9G</DonateLink>
    <DonateImg>https://az743702.vo.msecnd.net/cdn/kofi4.png?v=0</DonateImg>
    <Description>This is Bitwarden server API implementation written in rust compatible with upstream Bitwarden clients*, ideal for self-hosted deployment where running official resource-heavy service might not be ideal.</Description>
    <Overview>This is Bitwarden server API implementation written in rust compatible with upstream Bitwarden clients*, ideal for self-hosted deployment where running official resource-heavy service might not be ideal.</Overview>
    <Support>http://lime-technology.com/forum/index.php?topic=55931.0</Support>
    <Registry>https://hub.docker.com/r/mprasil/bitwarden/</Registry>
    <GitHub>https://github.com/mprasil/bitwarden_rs</GitHub>
    <Repository>mprasil/bitwarden</Repository>
    <Network>bridge</Network>
    <Networking>
        <Mode>bridge</Mode>
        <Publish>
            <Port>
                <HostPort>8343</HostPort>
                <ContainerPort>80</ContainerPort>
                <Protocol>tcp</Protocol>
            </Port>
        </Publish>
    </Networking>
    <Data>
        <Volume>
            <HostDir>/mnt/user/appdata/bitwarden/</HostDir>
            <ContainerDir>/data/</ContainerDir>
            <Mode>rw</Mode>
        </Volume>
    </Data>
    <WebUI>http://[IP]:[PORT:8434]</WebUI>
    <Icon>https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/bitwarden.png</Icon>
    <Config Name="WebUI" Target="80" Default="" Mode="tcp" Description="Container Port: 80" Type="Port" Display="always" Required="false" Mask="false">8343</Config>
    <Config Name="App Data" Target="/data/" Default="" Mode="rw" Description="Container Path: /data/" Type="Path" Display="always" Required="false" Mask="false">/mnt/user/appdata/bitwarden/</Config>
</Container>