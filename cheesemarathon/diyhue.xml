<?xml version="1.0" encoding="utf-8"?>
<Container version="2">
    <Privileged>false</Privileged>
    <Beta>False</Beta>
    <Category>HomeAutomation:</Category>
    <Name>diyHue</Name>
    <DonateText>Buy me a coffee</DonateText>
    <DonateLink>https://ko-fi.com/I2I0CW9G</DonateLink>
    <DonateImg>https://az743702.vo.msecnd.net/cdn/kofi2.png</DonateImg>
    <Description>
    diyHue emulates a Phillips Hue bridge allowing you to controll other smart lights and bulbs with the Hue ecosystem.
    Find more info at the diyHue GitHub wiki: https://github.com/mariusmotea/diyHue/wiki
    To setup just set an IP address in the network settings, along with setting the MAC and IP variabales with the values for the br0 network
    </Description>
    <Overview>
    diyHue emulates a Phillips Hue bridge allowing you to controll other smart lights and bulbs with the Hue ecosystem.
    Find more info at the diyHue GitHub wiki: https://github.com/mariusmotea/diyHue/wiki
    To setup just set an IP address in the network settings, along with setting the MAC and IP variabales with the values for the br0 network
    </Overview>
    <Support>https://forums.unraid.net/topic/54183-support-cheesemarathons-repo/</Support>
    <Registry>https://hub.docker.com/r/diyhue/core/</Registry>
    <GitHub>https://github.com/mariusmotea/diyHue</GitHub>
    <Repository>diyhue/core:latest</Repository>
    <Network>br0</Network>
    <MyIP></MyIP>
    <Networking>
        <Mode>br0</Mode>
        <Publish>
            <Port>
                <HostPort>80</HostPort>
                <ContainerPort/>
                <Protocol>tcp</Protocol>
            </Port>
            <Port>
                <HostPort>443</HostPort>
                <ContainerPort>443</ContainerPort>
                <Protocol>tcp</Protocol>
            </Port>
            <Port>
                <HostPort>1900</HostPort>
                <ContainerPort/>
                <Protocol>udp</Protocol>
            </Port>
            <Port>
                <HostPort>2100</HostPort>
                <ContainerPort/>
                <Protocol>udp</Protocol>
            </Port>
        </Publish>
    </Networking>
    <Data>
        <Volume>
            <HostDir>/mnt/user/appdata/diyHue</HostDir>
            <ContainerDir>/opt/hue-emulator/config/</ContainerDir>
            <Mode>rw</Mode>
        </Volume>
    </Data>
    <Environment>
        <Variable>
            <Value>bc:5f:f4:cd:c6:19</Value>
            <Name>MAC</Name>
            <Mode/>
        </Variable>
        <Variable>
            <Value>192.168.1.4</Value>
            <Name>IP</Name>
            <Mode/>
        </Variable>
    </Environment>
    <WebUI>http://[IP]:[PORT:80]</WebUI>
    <Icon>https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/diyhue.png</Icon>
    <Labels/>
    <Config Name="App Data" Target="/opt/hue-emulator/config/" Default="" Mode="rw" Description="Container Path: /opt/hue-emulator/config/" Type="Path" Display="always" Required="true" Mask="false">/mnt/user/appdata/diyHue</Config>
    <Config Name="80" Target="80" Default="80" Mode="tcp" Description="Container Port: 80" Type="Port" Display="always" Required="true" Mask="false">80</Config>
    <Config Name="443" Target="443" Default="443" Mode="tcp" Description="Container Port: 443" Type="Port" Display="always" Required="true" Mask="false">443</Config>
    <Config Name="1900" Target="1900" Default="1900" Mode="udp" Description="Container Port: 1900" Type="Port" Display="always" Required="true" Mask="false">1900</Config>
    <Config Name="2100" Target="2100" Default="2100" Mode="udp" Description="Container Port: 2100" Type="Port" Display="always" Required="true" Mask="false">2100</Config>
    <Config Name="MAC" Target="MAC" Default="" Mode="" Description="Container Variable: MAC" Type="Variable" Display="always" Required="true" Mask="false">bc:5f:f4:cd:c6:19</Config>
    <Config Name="IP" Target="IP" Default="" Mode="" Description="Container Variable: IP" Type="Variable" Display="always" Required="true" Mask="false">192.168.1.4</Config>
</Container>
